CP2 BUGLOG

1. Page fault exception arises when attempting to fetch an inode block via an offset from the boot block address. The reason was that we were multiplying by 4096 thinking that incrementing
the address would increment it by decimal 1. This was wrong because the type of pointer was our predefined struct. Thus when we incremented*4096, it was going into a whole different page
hence the page fault.

Solution: Don't multiply by 4096 when incrementing the address of the boot block array



2. Similar issue, incrementing the address of a datablock wasn't getting us to the next entry inside the block, it was moving to the next data block. 

Solution: This caused our file_read to fail. The fix was to make a new struct specifically for data blocks, we then -> the new array we created and we can index the data inside the blocks. 



3. Page fault arises when attempting to open SPECIFICALLY the file "verylargetextwithverylongname.txt". All other files of length 32 work just fine. And if the length is > 32, the functions correctly returns -1 and does not pagefault.

Solution: Delete this file lol

4. There were many edge cases in the keyboard for instance overflowing to the next line but missed the last typed character in the previous line, delete isn't actually deleting, etc

Solution: Forgot that it was 0 index stuff. Also need to carefully think about order of operations for the right behavior

5. Delete could delete anything in the terminal

Solution: Use a variable to keep track of user space and only allow user to delete things in its own space

6. Write kept printing everything in the buf, causing things to be printed twice on the terminal

Solution: Only allow write to actually print things when enter is in the keyboard_buffer

7. rtc is not displaying any interrupts and rtc_test() automatically passses without any functionality

Solution: Enabled cli() and test_interrupts() rtc_handler() but did not user clear() to ensure all interrupts are printed to the screen

8. rtc_test() was not incrementing frequency to set by the necessary power of 2

Solution: Alter for loop to ignore non-powers of two and only input frequencies 1 to 1024 to show that rtc can handle freuncy changes